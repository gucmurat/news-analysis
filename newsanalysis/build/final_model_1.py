# -- coding: utf-8 --
"""Final_Model_1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PFiy-uNXGDMraZcWdENwDyLNrLfb0AUD
"""


import spacy
import pandas as pd
import json
import torch

from transformers import AutoTokenizer, AutoModelForSequenceClassification

tokenizer = AutoTokenizer.from_pretrained("mrm8488/distilroberta-finetuned-financial-news-sentiment-analysis")
model = AutoModelForSequenceClassification.from_pretrained("build/models")

#tokenizer = AutoTokenizer.from_pretrained("mrm8488/distilroberta-finetuned-financial-news-sentiment-analysis")
#model = AutoModelForSequenceClassification.from_pretrained("mrm8488/distilroberta-finetuned-financial-news-sentiment-analysis", num_labels=3)

import datetime
today = datetime.date.today()
filename = "json_files/news" + str(today) + ".json"
path = filename

f = open(filename)
jsonObject = json.load(f)

arr = []
title = []
for i in range(len(jsonObject)):
  arr.append(jsonObject[i]["content"])
  title.append(jsonObject[i]["title"])

nlp = spacy.load("en_core_web_sm")
nlp_processed_arr = []
sentiment_predictions = []
for i in range(len(arr)):
  nlp_processed_arr.append(nlp(arr[i]))
  #res = model(tokenizer.encode(arr[i], padding=True, truncation=True,max_length=510, add_special_tokens = True, return_tensors='pt'))
  prediction = model(tokenizer.encode(arr[i], padding=True, truncation=True,max_length=512, add_special_tokens = True, return_tensors='pt'))
  prediction_2 = model(tokenizer.encode(title[i], padding=True, truncation=True,max_length=512, add_special_tokens = True, return_tensors='pt'))
  sentiment_predictions.append(int(torch.argmax((prediction.logits * 0.6+ prediction_2.logits * 0.4))))

dictionary = {}
for i in range(len(arr)):
  dictionary[i] = {
    "text" : arr[i],
    "label" : sentiment_predictions[i],
    "ents" : nlp_processed_arr[i].to_json()['ents'],
  }

filename = "json_files/output" + str(today) + ".json"
with open(filename,"w") as outfile:
  json.dump(dictionary, outfile, indent = 4, default=str)